#import <Foundation/Foundation.h>
#import "SWGApi.h"

/**
* Bybit API
* ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
*
* OpenAPI spec version: 0.2.10
* Contact: support@bybit.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGPositionsApi: NSObject <SWGApi>

extern NSString* kSWGPositionsApiErrorDomain;
extern NSInteger kSWGPositionsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Update margin.
/// 
///
/// @param symbol Contract type which you want update its margin
/// @param margin New margin you want set
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) positionsChangeMarginWithSymbol: (NSString*) symbol
    margin: (NSString*) margin
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Get user's closed profit and loss records
/// 
///
/// @param symbol Contract type
/// @param startTime Start timestamp point for result, in second (optional)
/// @param endTime End timestamp point for result, in second (optional)
/// @param execType Execution type (optional)
/// @param page Page. By default, gets first page of data. Maximum of 50 pages (optional)
/// @param limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) positionsClosePnlRecordsWithSymbol: (NSString*) symbol
    startTime: (NSNumber*) startTime
    endTime: (NSNumber*) endTime
    execType: (NSString*) execType
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Get my position list.
/// 
///
/// @param symbol Contract type which you want update its margin (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) positionsMyPositionWithSymbol: (NSString*) symbol
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Change user leverage.
/// 
///
/// @param symbol A symbol which you want change its leverage
/// @param leverage New leverage you want set
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) positionsSaveLeverageWithSymbol: (NSString*) symbol
    leverage: (NSString*) leverage
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Set Trading-Stop Condition.
/// 
///
/// @param symbol Contract type
/// @param takeProfit Not less than 0, 0 means cancel TP (optional)
/// @param stopLoss Not less than 0, 0 means cancel SL (optional)
/// @param trailingStop Not less than 0, 0 means cancel TS (optional)
/// @param varNewTrailingActive Trailing stop trigger price. Trailing stops are triggered only when the price reaches the specified price. Trailing stops are triggered immediately by default. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) positionsTradingStopWithSymbol: (NSString*) symbol
    takeProfit: (NSString*) takeProfit
    stopLoss: (NSString*) stopLoss
    trailingStop: (NSString*) trailingStop
    varNewTrailingActive: (NSString*) varNewTrailingActive
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;



@end
