#import <Foundation/Foundation.h>
#import "SWGApi.h"

/**
* Bybit API
* ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
*
* OpenAPI spec version: 0.2.10
* Contact: support@bybit.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGExecutionApi: NSObject <SWGApi>

extern NSString* kSWGExecutionApiErrorDomain;
extern NSInteger kSWGExecutionApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get user’s trade records.
/// 
///
/// @param orderId OrderID. If not provided, will return user’s trading records. (optional)
/// @param symbol Contract type. If order_id not provided, symbol is required. (optional)
/// @param startTime Start timestamp point for result. (optional)
/// @param page Page. Default getting first page data. (optional)
/// @param limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) executionGetTradesWithOrderId: (NSString*) orderId
    symbol: (NSString*) symbol
    startTime: (NSString*) startTime
    page: (NSString*) page
    limit: (NSString*) limit
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Get user's closed profit and loss records
/// 
///
/// @param symbol Contract type
/// @param startTime Start timestamp point for result, in second (optional)
/// @param endTime End timestamp point for result, in second (optional)
/// @param execType Execution type (optional)
/// @param page Page. By default, gets first page of data. Maximum of 50 pages (optional)
/// @param limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) positionsClosePnlRecordsWithSymbol: (NSString*) symbol
    startTime: (NSNumber*) startTime
    endTime: (NSNumber*) endTime
    execType: (NSString*) execType
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;



@end
