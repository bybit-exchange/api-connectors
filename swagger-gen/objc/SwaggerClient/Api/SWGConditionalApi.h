#import <Foundation/Foundation.h>
#import "SWGApi.h"

/**
* Bybit API
* ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
*
* OpenAPI spec version: 0.2.10
* Contact: support@bybit.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGConditionalApi: NSObject <SWGApi>

extern NSString* kSWGConditionalApiErrorDomain;
extern NSInteger kSWGConditionalApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Cancel conditional order.
/// 
///
/// @param symbol Contract type.
/// @param stopOrderId Order ID of conditional order. (optional)
/// @param orderLinkId Agency customized order ID. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) conditionalCancelWithSymbol: (NSString*) symbol
    stopOrderId: (NSString*) stopOrderId
    orderLinkId: (NSString*) orderLinkId
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Cancel conditional order.
/// 
///
/// @param symbol Contract type.
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) conditionalCancelAllWithSymbol: (NSString*) symbol
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Get my conditional order list.
/// 
///
/// @param symbol Contract type
/// @param stopOrderStatus Stop order status. (optional)
/// @param limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page. (optional)
/// @param direction Search direction. prev: prev page, next: next page. Defaults to next (optional)
/// @param cursor Page turning markï¼ŒUse return cursor,Sign use origin data, in request please urlencode (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) conditionalGetOrdersWithSymbol: (NSString*) symbol
    stopOrderStatus: (NSString*) stopOrderStatus
    limit: (NSNumber*) limit
    direction: (NSString*) direction
    cursor: (NSString*) cursor
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Place a new conditional order.
/// 
///
/// @param side Side.
/// @param symbol Contract type.
/// @param orderType Conditional order type.
/// @param qty Order quantity.
/// @param basePrice Send current market price. It will be used to compare with the value of &#39;stop_px&#39;, to decide whether your conditional order will be triggered by crossing trigger price from upper side or lower side. Mainly used to identify the expected direction of the current conditional order..
/// @param stopPx Trigger price.
/// @param timeInForce Time in force.
/// @param price Execution price for conditional order (optional)
/// @param triggerBy Trigger price type. Default LastPrice. (optional)
/// @param closeOnTrigger close on trigger. (optional)
/// @param orderLinkId Customized order ID, maximum length at 36 characters, and order ID under the same agency has to be unique.. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) conditionalNewWithSide: (NSString*) side
    symbol: (NSString*) symbol
    orderType: (NSString*) orderType
    qty: (NSString*) qty
    basePrice: (NSString*) basePrice
    stopPx: (NSString*) stopPx
    timeInForce: (NSString*) timeInForce
    price: (NSString*) price
    triggerBy: (NSString*) triggerBy
    closeOnTrigger: (NSNumber*) closeOnTrigger
    orderLinkId: (NSString*) orderLinkId
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Query real-time stop order information.
/// 
///
/// @param stopOrderId Order ID of conditional order. (optional)
/// @param orderLinkId Agency customized order ID. (optional)
/// @param symbol Contract type. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) conditionalQueryWithStopOrderId: (NSString*) stopOrderId
    orderLinkId: (NSString*) orderLinkId
    symbol: (NSString*) symbol
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Replace conditional order. Only incomplete orders can be modified. 
/// 
///
/// @param symbol Contract type.
/// @param stopOrderId Stop order ID. (optional)
/// @param orderLinkId Order Link ID. (optional)
/// @param pRQty Order quantity. (optional)
/// @param pRPrice Order price. (optional)
/// @param pRTriggerPrice Trigger price. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) conditionalReplaceWithSymbol: (NSString*) symbol
    stopOrderId: (NSString*) stopOrderId
    orderLinkId: (NSString*) orderLinkId
    pRQty: (NSString*) pRQty
    pRPrice: (NSString*) pRPrice
    pRTriggerPrice: (NSString*) pRTriggerPrice
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;



@end
