#import <Foundation/Foundation.h>
#import "SWGApi.h"

/**
* Bybit API
* ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
*
* OpenAPI spec version: 0.2.10
* Contact: support@bybit.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGOrderApi: NSObject <SWGApi>

extern NSString* kSWGOrderApiErrorDomain;
extern NSInteger kSWGOrderApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get my active order list.
/// 
///
/// @param symbol Contract type.
/// @param orderId Order ID (optional)
/// @param orderLinkId Order link id. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) orderCancelWithSymbol: (NSString*) symbol
    orderId: (NSString*) orderId
    orderLinkId: (NSString*) orderLinkId
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Get my active order list.
/// 
///
/// @param symbol Contract type.
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) orderCancelAllWithSymbol: (NSString*) symbol
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Get my active order list.
/// 
///
/// @param symbol Contract type. Default BTCUSD
/// @param limit TLimit for data size per page, max size is 50. Default as showing 20 pieces of data per page (optional)
/// @param orderStatus Query your orders for all statuses if &#39;order_status&#39; is empty. If you want to query orders with specific statuses , you can pass the order_status split by (optional)
/// @param direction Search direction. prev: prev page, next: next page. Defaults to next (optional)
/// @param cursor Page turning markï¼ŒUse return cursor,Sign use origin data, in request please urlencode (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) orderGetOrdersWithSymbol: (NSString*) symbol
    limit: (NSNumber*) limit
    orderStatus: (NSString*) orderStatus
    direction: (NSString*) direction
    cursor: (NSString*) cursor
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Place active order
/// 
///
/// @param side Side
/// @param symbol Contract type.
/// @param orderType Active order type
/// @param qty 
/// @param timeInForce Time in force
/// @param price Order price. (optional)
/// @param takeProfit take profit price (optional)
/// @param stopLoss stop loss price (optional)
/// @param reduceOnly reduce only (optional)
/// @param closeOnTrigger close on trigger (optional)
/// @param orderLinkId TCustomized order ID, maximum length at 36 characters, and order ID under the same agency has to be unique. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) orderNewWithSide: (NSString*) side
    symbol: (NSString*) symbol
    orderType: (NSString*) orderType
    qty: (NSNumber*) qty
    timeInForce: (NSString*) timeInForce
    price: (NSNumber*) price
    takeProfit: (NSNumber*) takeProfit
    stopLoss: (NSNumber*) stopLoss
    reduceOnly: (NSNumber*) reduceOnly
    closeOnTrigger: (NSNumber*) closeOnTrigger
    orderLinkId: (NSString*) orderLinkId
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Get my active order list.
/// 
///
/// @param orderId Order ID (optional)
/// @param symbol Contract type. Default BTCUSD (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) orderQueryWithOrderId: (NSString*) orderId
    symbol: (NSString*) symbol
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Replace active order. Only incomplete orders can be modified. 
/// 
///
/// @param symbol Contract type.
/// @param orderId Order ID. (optional)
/// @param orderLinkId Order Link ID. (optional)
/// @param pRQty Order quantity. (optional)
/// @param pRPrice Order price. (optional)
/// 
///  code:200 message:"Request was successful"
///
/// @return NSObject*
-(NSURLSessionTask*) orderReplaceWithSymbol: (NSString*) symbol
    orderId: (NSString*) orderId
    orderLinkId: (NSString*) orderLinkId
    pRQty: (NSString*) pRQty
    pRPrice: (NSString*) pRPrice
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;



@end
