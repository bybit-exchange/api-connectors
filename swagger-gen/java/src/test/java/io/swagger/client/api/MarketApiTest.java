/*
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MarketApi
 */
@Ignore
public class MarketApiTest {

    private final MarketApi api = new MarketApi();

    
    /**
     * Query Account Long Short Ratio
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketAccountRatioTest() throws ApiException {
        String symbol = null;
        String period = null;
        Integer limit = null;
        Object response = api.marketAccountRatio(symbol, period, limit);

        // TODO: test validations
    }
    
    /**
     * Query Big Deal
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketBigDealTest() throws ApiException {
        String symbol = null;
        Integer limit = null;
        Object response = api.marketBigDeal(symbol, limit);

        // TODO: test validations
    }
    
    /**
     * Query liq records.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketLiqRecordsTest() throws ApiException {
        String symbol = null;
        Integer from = null;
        Integer limit = null;
        Integer startTime = null;
        Integer endTime = null;
        Object response = api.marketLiqRecords(symbol, from, limit, startTime, endTime);

        // TODO: test validations
    }
    
    /**
     * Query Open Interest
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketOpenInterestTest() throws ApiException {
        String symbol = null;
        String period = null;
        Integer limit = null;
        Object response = api.marketOpenInterest(symbol, period, limit);

        // TODO: test validations
    }
    
    /**
     * Get the orderbook.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketOrderbookTest() throws ApiException {
        String symbol = null;
        Object response = api.marketOrderbook(symbol);

        // TODO: test validations
    }
    
    /**
     * Get the latest information for symbol.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketSymbolInfoTest() throws ApiException {
        String symbol = null;
        Object response = api.marketSymbolInfo(symbol);

        // TODO: test validations
    }
    
    /**
     * Get recent trades
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void marketTradingRecordsTest() throws ApiException {
        String symbol = null;
        Integer from = null;
        Integer limit = null;
        Object response = api.marketTradingRecords(symbol, from, limit);

        // TODO: test validations
    }
    
}
