/**
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/APIKeyBase', 'model/APIKeyInfo', 'model/AccountRatio', 'model/AccountRatioInfo', 'model/Announcement', 'model/AnnouncementInfo', 'model/BigDeal', 'model/BigDealInfo', 'model/ClosedPnlBase', 'model/ClosedPnlInfo', 'model/ConditionalCancelAllBase', 'model/ConditionalCancelAllRes', 'model/ConditionalOrdersRes', 'model/ConditionalOrdersResBase', 'model/ConditionalRes', 'model/ExchangeOrderList', 'model/ExchangeOrderListBase', 'model/ExtFields', 'model/FundRecordBase', 'model/FundingFeeBase', 'model/FundingFeeRes', 'model/FundingPredicted', 'model/FundingPredictedBase', 'model/FundingRate', 'model/FundingRateBase', 'model/FundingRecords', 'model/GetRiskLimitRes', 'model/KlineBase', 'model/KlineRes', 'model/LCPInfo', 'model/LCPInfoBase', 'model/Leverage', 'model/LeverageInfo', 'model/LeverageResult', 'model/LinearCancelOrderResult', 'model/LinearCancelOrderResultBase', 'model/LinearCancelStopOrderResult', 'model/LinearCancelStopOrderResultBase', 'model/LinearClosePnlRecordsResponse', 'model/LinearClosedPnlRecordResult', 'model/LinearCreateOrderResult', 'model/LinearCreateOrderResultBase', 'model/LinearCreateStopOrderResult', 'model/LinearCreateStopOrderResultBase', 'model/LinearFundingPredicted', 'model/LinearFundingPredictedBase', 'model/LinearKlineResp', 'model/LinearKlineRespBase', 'model/LinearListOrderResult', 'model/LinearListStopOrderResult', 'model/LinearOrderCancelAllBase', 'model/LinearOrderRecordsResponse', 'model/LinearOrderRecordsResponseBase', 'model/LinearOrderReplace', 'model/LinearPositionListResult', 'model/LinearPositionListResultBase', 'model/LinearPrevFundingRateResp', 'model/LinearPrevFundingRateRespBase', 'model/LinearPrevFundingResp', 'model/LinearPrevFundingRespBase', 'model/LinearRecentTradingRecordResp', 'model/LinearRecentTradingRecordRespBase', 'model/LinearRiskLimitResp', 'model/LinearRiskLimitRespBase', 'model/LinearSearchOrderResult', 'model/LinearSearchOrderResultBase', 'model/LinearSearchStopOrderResult', 'model/LinearSearchStopOrderResultBase', 'model/LinearSetLeverageResult', 'model/LinearSetMarginResult', 'model/LinearSetMarginResultBase', 'model/LinearSetTradingStopResult', 'model/LinearStopOrderCancelAllBase', 'model/LinearStopOrderRecordsResponse', 'model/LinearStopOrderRecordsResponseBase', 'model/LinearStopOrderReplace', 'model/LinearSwitchIsolatedResult', 'model/LinearSwitchModeResult', 'model/LinearTradeRecordItem', 'model/LinearTradeRecordsResponse', 'model/LiqRecords', 'model/LiqRecordsInfo', 'model/LotSizeFilter', 'model/MarkPriceKlineBase', 'model/MarkPriceKlineInfo', 'model/OderBookRes', 'model/OpenInterest', 'model/OpenInterestInfo', 'model/OrderBookBase', 'model/OrderCancelAllBase', 'model/OrderCancelAllRes', 'model/OrderCancelBase', 'model/OrderIdRes', 'model/OrderRes', 'model/OrderResBase', 'model/Position', 'model/PositionInfo', 'model/PriceFilter', 'model/QueryOrderBase', 'model/QueryOrderRes', 'model/ReplaceConditionalBase', 'model/ReplaceOrderBase', 'model/RiskIDRes', 'model/RiskLimitBase', 'model/RiskLimitRes', 'model/ServerTime', 'model/SetRiskLimitBase', 'model/StopOrderOrdersResBase', 'model/SymbolInfo', 'model/SymbolInfoBase', 'model/SymbolTickInfo', 'model/Symbols', 'model/TradeRecords', 'model/TradeRecordsBase', 'model/TradeRecordsInfo', 'model/TradingRecords', 'model/TradingRecordsInfo', 'model/TradingStopBase', 'model/TradingStopRes', 'model/V2CancelOrderBase', 'model/V2ConditionalBase', 'model/V2ConditionalListRes', 'model/V2ConditionalRes', 'model/V2OrderListBase', 'model/V2OrderListData', 'model/V2OrderRes', 'model/WalletBalance', 'model/WalletBalanceBase', 'model/WithdrawRecords', 'model/WithdrawResBase', 'api/APIkeyApi', 'api/CommonApi', 'api/ConditionalApi', 'api/ExecutionApi', 'api/FundingApi', 'api/KlineApi', 'api/LinearConditionalApi', 'api/LinearExecutionApi', 'api/LinearFundingApi', 'api/LinearKlineApi', 'api/LinearMarketApi', 'api/LinearOrderApi', 'api/LinearPositionsApi', 'api/LinearWalletApi', 'api/MarketApi', 'api/OrderApi', 'api/PositionsApi', 'api/SymbolApi', 'api/WalletApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/APIKeyBase'), require('./model/APIKeyInfo'), require('./model/AccountRatio'), require('./model/AccountRatioInfo'), require('./model/Announcement'), require('./model/AnnouncementInfo'), require('./model/BigDeal'), require('./model/BigDealInfo'), require('./model/ClosedPnlBase'), require('./model/ClosedPnlInfo'), require('./model/ConditionalCancelAllBase'), require('./model/ConditionalCancelAllRes'), require('./model/ConditionalOrdersRes'), require('./model/ConditionalOrdersResBase'), require('./model/ConditionalRes'), require('./model/ExchangeOrderList'), require('./model/ExchangeOrderListBase'), require('./model/ExtFields'), require('./model/FundRecordBase'), require('./model/FundingFeeBase'), require('./model/FundingFeeRes'), require('./model/FundingPredicted'), require('./model/FundingPredictedBase'), require('./model/FundingRate'), require('./model/FundingRateBase'), require('./model/FundingRecords'), require('./model/GetRiskLimitRes'), require('./model/KlineBase'), require('./model/KlineRes'), require('./model/LCPInfo'), require('./model/LCPInfoBase'), require('./model/Leverage'), require('./model/LeverageInfo'), require('./model/LeverageResult'), require('./model/LinearCancelOrderResult'), require('./model/LinearCancelOrderResultBase'), require('./model/LinearCancelStopOrderResult'), require('./model/LinearCancelStopOrderResultBase'), require('./model/LinearClosePnlRecordsResponse'), require('./model/LinearClosedPnlRecordResult'), require('./model/LinearCreateOrderResult'), require('./model/LinearCreateOrderResultBase'), require('./model/LinearCreateStopOrderResult'), require('./model/LinearCreateStopOrderResultBase'), require('./model/LinearFundingPredicted'), require('./model/LinearFundingPredictedBase'), require('./model/LinearKlineResp'), require('./model/LinearKlineRespBase'), require('./model/LinearListOrderResult'), require('./model/LinearListStopOrderResult'), require('./model/LinearOrderCancelAllBase'), require('./model/LinearOrderRecordsResponse'), require('./model/LinearOrderRecordsResponseBase'), require('./model/LinearOrderReplace'), require('./model/LinearPositionListResult'), require('./model/LinearPositionListResultBase'), require('./model/LinearPrevFundingRateResp'), require('./model/LinearPrevFundingRateRespBase'), require('./model/LinearPrevFundingResp'), require('./model/LinearPrevFundingRespBase'), require('./model/LinearRecentTradingRecordResp'), require('./model/LinearRecentTradingRecordRespBase'), require('./model/LinearRiskLimitResp'), require('./model/LinearRiskLimitRespBase'), require('./model/LinearSearchOrderResult'), require('./model/LinearSearchOrderResultBase'), require('./model/LinearSearchStopOrderResult'), require('./model/LinearSearchStopOrderResultBase'), require('./model/LinearSetLeverageResult'), require('./model/LinearSetMarginResult'), require('./model/LinearSetMarginResultBase'), require('./model/LinearSetTradingStopResult'), require('./model/LinearStopOrderCancelAllBase'), require('./model/LinearStopOrderRecordsResponse'), require('./model/LinearStopOrderRecordsResponseBase'), require('./model/LinearStopOrderReplace'), require('./model/LinearSwitchIsolatedResult'), require('./model/LinearSwitchModeResult'), require('./model/LinearTradeRecordItem'), require('./model/LinearTradeRecordsResponse'), require('./model/LiqRecords'), require('./model/LiqRecordsInfo'), require('./model/LotSizeFilter'), require('./model/MarkPriceKlineBase'), require('./model/MarkPriceKlineInfo'), require('./model/OderBookRes'), require('./model/OpenInterest'), require('./model/OpenInterestInfo'), require('./model/OrderBookBase'), require('./model/OrderCancelAllBase'), require('./model/OrderCancelAllRes'), require('./model/OrderCancelBase'), require('./model/OrderIdRes'), require('./model/OrderRes'), require('./model/OrderResBase'), require('./model/Position'), require('./model/PositionInfo'), require('./model/PriceFilter'), require('./model/QueryOrderBase'), require('./model/QueryOrderRes'), require('./model/ReplaceConditionalBase'), require('./model/ReplaceOrderBase'), require('./model/RiskIDRes'), require('./model/RiskLimitBase'), require('./model/RiskLimitRes'), require('./model/ServerTime'), require('./model/SetRiskLimitBase'), require('./model/StopOrderOrdersResBase'), require('./model/SymbolInfo'), require('./model/SymbolInfoBase'), require('./model/SymbolTickInfo'), require('./model/Symbols'), require('./model/TradeRecords'), require('./model/TradeRecordsBase'), require('./model/TradeRecordsInfo'), require('./model/TradingRecords'), require('./model/TradingRecordsInfo'), require('./model/TradingStopBase'), require('./model/TradingStopRes'), require('./model/V2CancelOrderBase'), require('./model/V2ConditionalBase'), require('./model/V2ConditionalListRes'), require('./model/V2ConditionalRes'), require('./model/V2OrderListBase'), require('./model/V2OrderListData'), require('./model/V2OrderRes'), require('./model/WalletBalance'), require('./model/WalletBalanceBase'), require('./model/WithdrawRecords'), require('./model/WithdrawResBase'), require('./api/APIkeyApi'), require('./api/CommonApi'), require('./api/ConditionalApi'), require('./api/ExecutionApi'), require('./api/FundingApi'), require('./api/KlineApi'), require('./api/LinearConditionalApi'), require('./api/LinearExecutionApi'), require('./api/LinearFundingApi'), require('./api/LinearKlineApi'), require('./api/LinearMarketApi'), require('./api/LinearOrderApi'), require('./api/LinearPositionsApi'), require('./api/LinearWalletApi'), require('./api/MarketApi'), require('./api/OrderApi'), require('./api/PositionsApi'), require('./api/SymbolApi'), require('./api/WalletApi'));
  }
}(function(ApiClient, APIKeyBase, APIKeyInfo, AccountRatio, AccountRatioInfo, Announcement, AnnouncementInfo, BigDeal, BigDealInfo, ClosedPnlBase, ClosedPnlInfo, ConditionalCancelAllBase, ConditionalCancelAllRes, ConditionalOrdersRes, ConditionalOrdersResBase, ConditionalRes, ExchangeOrderList, ExchangeOrderListBase, ExtFields, FundRecordBase, FundingFeeBase, FundingFeeRes, FundingPredicted, FundingPredictedBase, FundingRate, FundingRateBase, FundingRecords, GetRiskLimitRes, KlineBase, KlineRes, LCPInfo, LCPInfoBase, Leverage, LeverageInfo, LeverageResult, LinearCancelOrderResult, LinearCancelOrderResultBase, LinearCancelStopOrderResult, LinearCancelStopOrderResultBase, LinearClosePnlRecordsResponse, LinearClosedPnlRecordResult, LinearCreateOrderResult, LinearCreateOrderResultBase, LinearCreateStopOrderResult, LinearCreateStopOrderResultBase, LinearFundingPredicted, LinearFundingPredictedBase, LinearKlineResp, LinearKlineRespBase, LinearListOrderResult, LinearListStopOrderResult, LinearOrderCancelAllBase, LinearOrderRecordsResponse, LinearOrderRecordsResponseBase, LinearOrderReplace, LinearPositionListResult, LinearPositionListResultBase, LinearPrevFundingRateResp, LinearPrevFundingRateRespBase, LinearPrevFundingResp, LinearPrevFundingRespBase, LinearRecentTradingRecordResp, LinearRecentTradingRecordRespBase, LinearRiskLimitResp, LinearRiskLimitRespBase, LinearSearchOrderResult, LinearSearchOrderResultBase, LinearSearchStopOrderResult, LinearSearchStopOrderResultBase, LinearSetLeverageResult, LinearSetMarginResult, LinearSetMarginResultBase, LinearSetTradingStopResult, LinearStopOrderCancelAllBase, LinearStopOrderRecordsResponse, LinearStopOrderRecordsResponseBase, LinearStopOrderReplace, LinearSwitchIsolatedResult, LinearSwitchModeResult, LinearTradeRecordItem, LinearTradeRecordsResponse, LiqRecords, LiqRecordsInfo, LotSizeFilter, MarkPriceKlineBase, MarkPriceKlineInfo, OderBookRes, OpenInterest, OpenInterestInfo, OrderBookBase, OrderCancelAllBase, OrderCancelAllRes, OrderCancelBase, OrderIdRes, OrderRes, OrderResBase, Position, PositionInfo, PriceFilter, QueryOrderBase, QueryOrderRes, ReplaceConditionalBase, ReplaceOrderBase, RiskIDRes, RiskLimitBase, RiskLimitRes, ServerTime, SetRiskLimitBase, StopOrderOrdersResBase, SymbolInfo, SymbolInfoBase, SymbolTickInfo, Symbols, TradeRecords, TradeRecordsBase, TradeRecordsInfo, TradingRecords, TradingRecordsInfo, TradingStopBase, TradingStopRes, V2CancelOrderBase, V2ConditionalBase, V2ConditionalListRes, V2ConditionalRes, V2OrderListBase, V2OrderListData, V2OrderRes, WalletBalance, WalletBalanceBase, WithdrawRecords, WithdrawResBase, APIkeyApi, CommonApi, ConditionalApi, ExecutionApi, FundingApi, KlineApi, LinearConditionalApi, LinearExecutionApi, LinearFundingApi, LinearKlineApi, LinearMarketApi, LinearOrderApi, LinearPositionsApi, LinearWalletApi, MarketApi, OrderApi, PositionsApi, SymbolApi, WalletApi) {
  'use strict';

  /**
   * _REST_API_for_the_Bybit_Exchange_Base_URI__httpsapi_bybit_com.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var BybitApi = require('index'); // See note below*.
   * var xxxSvc = new BybitApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new BybitApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new BybitApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new BybitApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.2.10
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The APIKeyBase model constructor.
     * @property {module:model/APIKeyBase}
     */
    APIKeyBase: APIKeyBase,
    /**
     * The APIKeyInfo model constructor.
     * @property {module:model/APIKeyInfo}
     */
    APIKeyInfo: APIKeyInfo,
    /**
     * The AccountRatio model constructor.
     * @property {module:model/AccountRatio}
     */
    AccountRatio: AccountRatio,
    /**
     * The AccountRatioInfo model constructor.
     * @property {module:model/AccountRatioInfo}
     */
    AccountRatioInfo: AccountRatioInfo,
    /**
     * The Announcement model constructor.
     * @property {module:model/Announcement}
     */
    Announcement: Announcement,
    /**
     * The AnnouncementInfo model constructor.
     * @property {module:model/AnnouncementInfo}
     */
    AnnouncementInfo: AnnouncementInfo,
    /**
     * The BigDeal model constructor.
     * @property {module:model/BigDeal}
     */
    BigDeal: BigDeal,
    /**
     * The BigDealInfo model constructor.
     * @property {module:model/BigDealInfo}
     */
    BigDealInfo: BigDealInfo,
    /**
     * The ClosedPnlBase model constructor.
     * @property {module:model/ClosedPnlBase}
     */
    ClosedPnlBase: ClosedPnlBase,
    /**
     * The ClosedPnlInfo model constructor.
     * @property {module:model/ClosedPnlInfo}
     */
    ClosedPnlInfo: ClosedPnlInfo,
    /**
     * The ConditionalCancelAllBase model constructor.
     * @property {module:model/ConditionalCancelAllBase}
     */
    ConditionalCancelAllBase: ConditionalCancelAllBase,
    /**
     * The ConditionalCancelAllRes model constructor.
     * @property {module:model/ConditionalCancelAllRes}
     */
    ConditionalCancelAllRes: ConditionalCancelAllRes,
    /**
     * The ConditionalOrdersRes model constructor.
     * @property {module:model/ConditionalOrdersRes}
     */
    ConditionalOrdersRes: ConditionalOrdersRes,
    /**
     * The ConditionalOrdersResBase model constructor.
     * @property {module:model/ConditionalOrdersResBase}
     */
    ConditionalOrdersResBase: ConditionalOrdersResBase,
    /**
     * The ConditionalRes model constructor.
     * @property {module:model/ConditionalRes}
     */
    ConditionalRes: ConditionalRes,
    /**
     * The ExchangeOrderList model constructor.
     * @property {module:model/ExchangeOrderList}
     */
    ExchangeOrderList: ExchangeOrderList,
    /**
     * The ExchangeOrderListBase model constructor.
     * @property {module:model/ExchangeOrderListBase}
     */
    ExchangeOrderListBase: ExchangeOrderListBase,
    /**
     * The ExtFields model constructor.
     * @property {module:model/ExtFields}
     */
    ExtFields: ExtFields,
    /**
     * The FundRecordBase model constructor.
     * @property {module:model/FundRecordBase}
     */
    FundRecordBase: FundRecordBase,
    /**
     * The FundingFeeBase model constructor.
     * @property {module:model/FundingFeeBase}
     */
    FundingFeeBase: FundingFeeBase,
    /**
     * The FundingFeeRes model constructor.
     * @property {module:model/FundingFeeRes}
     */
    FundingFeeRes: FundingFeeRes,
    /**
     * The FundingPredicted model constructor.
     * @property {module:model/FundingPredicted}
     */
    FundingPredicted: FundingPredicted,
    /**
     * The FundingPredictedBase model constructor.
     * @property {module:model/FundingPredictedBase}
     */
    FundingPredictedBase: FundingPredictedBase,
    /**
     * The FundingRate model constructor.
     * @property {module:model/FundingRate}
     */
    FundingRate: FundingRate,
    /**
     * The FundingRateBase model constructor.
     * @property {module:model/FundingRateBase}
     */
    FundingRateBase: FundingRateBase,
    /**
     * The FundingRecords model constructor.
     * @property {module:model/FundingRecords}
     */
    FundingRecords: FundingRecords,
    /**
     * The GetRiskLimitRes model constructor.
     * @property {module:model/GetRiskLimitRes}
     */
    GetRiskLimitRes: GetRiskLimitRes,
    /**
     * The KlineBase model constructor.
     * @property {module:model/KlineBase}
     */
    KlineBase: KlineBase,
    /**
     * The KlineRes model constructor.
     * @property {module:model/KlineRes}
     */
    KlineRes: KlineRes,
    /**
     * The LCPInfo model constructor.
     * @property {module:model/LCPInfo}
     */
    LCPInfo: LCPInfo,
    /**
     * The LCPInfoBase model constructor.
     * @property {module:model/LCPInfoBase}
     */
    LCPInfoBase: LCPInfoBase,
    /**
     * The Leverage model constructor.
     * @property {module:model/Leverage}
     */
    Leverage: Leverage,
    /**
     * The LeverageInfo model constructor.
     * @property {module:model/LeverageInfo}
     */
    LeverageInfo: LeverageInfo,
    /**
     * The LeverageResult model constructor.
     * @property {module:model/LeverageResult}
     */
    LeverageResult: LeverageResult,
    /**
     * The LinearCancelOrderResult model constructor.
     * @property {module:model/LinearCancelOrderResult}
     */
    LinearCancelOrderResult: LinearCancelOrderResult,
    /**
     * The LinearCancelOrderResultBase model constructor.
     * @property {module:model/LinearCancelOrderResultBase}
     */
    LinearCancelOrderResultBase: LinearCancelOrderResultBase,
    /**
     * The LinearCancelStopOrderResult model constructor.
     * @property {module:model/LinearCancelStopOrderResult}
     */
    LinearCancelStopOrderResult: LinearCancelStopOrderResult,
    /**
     * The LinearCancelStopOrderResultBase model constructor.
     * @property {module:model/LinearCancelStopOrderResultBase}
     */
    LinearCancelStopOrderResultBase: LinearCancelStopOrderResultBase,
    /**
     * The LinearClosePnlRecordsResponse model constructor.
     * @property {module:model/LinearClosePnlRecordsResponse}
     */
    LinearClosePnlRecordsResponse: LinearClosePnlRecordsResponse,
    /**
     * The LinearClosedPnlRecordResult model constructor.
     * @property {module:model/LinearClosedPnlRecordResult}
     */
    LinearClosedPnlRecordResult: LinearClosedPnlRecordResult,
    /**
     * The LinearCreateOrderResult model constructor.
     * @property {module:model/LinearCreateOrderResult}
     */
    LinearCreateOrderResult: LinearCreateOrderResult,
    /**
     * The LinearCreateOrderResultBase model constructor.
     * @property {module:model/LinearCreateOrderResultBase}
     */
    LinearCreateOrderResultBase: LinearCreateOrderResultBase,
    /**
     * The LinearCreateStopOrderResult model constructor.
     * @property {module:model/LinearCreateStopOrderResult}
     */
    LinearCreateStopOrderResult: LinearCreateStopOrderResult,
    /**
     * The LinearCreateStopOrderResultBase model constructor.
     * @property {module:model/LinearCreateStopOrderResultBase}
     */
    LinearCreateStopOrderResultBase: LinearCreateStopOrderResultBase,
    /**
     * The LinearFundingPredicted model constructor.
     * @property {module:model/LinearFundingPredicted}
     */
    LinearFundingPredicted: LinearFundingPredicted,
    /**
     * The LinearFundingPredictedBase model constructor.
     * @property {module:model/LinearFundingPredictedBase}
     */
    LinearFundingPredictedBase: LinearFundingPredictedBase,
    /**
     * The LinearKlineResp model constructor.
     * @property {module:model/LinearKlineResp}
     */
    LinearKlineResp: LinearKlineResp,
    /**
     * The LinearKlineRespBase model constructor.
     * @property {module:model/LinearKlineRespBase}
     */
    LinearKlineRespBase: LinearKlineRespBase,
    /**
     * The LinearListOrderResult model constructor.
     * @property {module:model/LinearListOrderResult}
     */
    LinearListOrderResult: LinearListOrderResult,
    /**
     * The LinearListStopOrderResult model constructor.
     * @property {module:model/LinearListStopOrderResult}
     */
    LinearListStopOrderResult: LinearListStopOrderResult,
    /**
     * The LinearOrderCancelAllBase model constructor.
     * @property {module:model/LinearOrderCancelAllBase}
     */
    LinearOrderCancelAllBase: LinearOrderCancelAllBase,
    /**
     * The LinearOrderRecordsResponse model constructor.
     * @property {module:model/LinearOrderRecordsResponse}
     */
    LinearOrderRecordsResponse: LinearOrderRecordsResponse,
    /**
     * The LinearOrderRecordsResponseBase model constructor.
     * @property {module:model/LinearOrderRecordsResponseBase}
     */
    LinearOrderRecordsResponseBase: LinearOrderRecordsResponseBase,
    /**
     * The LinearOrderReplace model constructor.
     * @property {module:model/LinearOrderReplace}
     */
    LinearOrderReplace: LinearOrderReplace,
    /**
     * The LinearPositionListResult model constructor.
     * @property {module:model/LinearPositionListResult}
     */
    LinearPositionListResult: LinearPositionListResult,
    /**
     * The LinearPositionListResultBase model constructor.
     * @property {module:model/LinearPositionListResultBase}
     */
    LinearPositionListResultBase: LinearPositionListResultBase,
    /**
     * The LinearPrevFundingRateResp model constructor.
     * @property {module:model/LinearPrevFundingRateResp}
     */
    LinearPrevFundingRateResp: LinearPrevFundingRateResp,
    /**
     * The LinearPrevFundingRateRespBase model constructor.
     * @property {module:model/LinearPrevFundingRateRespBase}
     */
    LinearPrevFundingRateRespBase: LinearPrevFundingRateRespBase,
    /**
     * The LinearPrevFundingResp model constructor.
     * @property {module:model/LinearPrevFundingResp}
     */
    LinearPrevFundingResp: LinearPrevFundingResp,
    /**
     * The LinearPrevFundingRespBase model constructor.
     * @property {module:model/LinearPrevFundingRespBase}
     */
    LinearPrevFundingRespBase: LinearPrevFundingRespBase,
    /**
     * The LinearRecentTradingRecordResp model constructor.
     * @property {module:model/LinearRecentTradingRecordResp}
     */
    LinearRecentTradingRecordResp: LinearRecentTradingRecordResp,
    /**
     * The LinearRecentTradingRecordRespBase model constructor.
     * @property {module:model/LinearRecentTradingRecordRespBase}
     */
    LinearRecentTradingRecordRespBase: LinearRecentTradingRecordRespBase,
    /**
     * The LinearRiskLimitResp model constructor.
     * @property {module:model/LinearRiskLimitResp}
     */
    LinearRiskLimitResp: LinearRiskLimitResp,
    /**
     * The LinearRiskLimitRespBase model constructor.
     * @property {module:model/LinearRiskLimitRespBase}
     */
    LinearRiskLimitRespBase: LinearRiskLimitRespBase,
    /**
     * The LinearSearchOrderResult model constructor.
     * @property {module:model/LinearSearchOrderResult}
     */
    LinearSearchOrderResult: LinearSearchOrderResult,
    /**
     * The LinearSearchOrderResultBase model constructor.
     * @property {module:model/LinearSearchOrderResultBase}
     */
    LinearSearchOrderResultBase: LinearSearchOrderResultBase,
    /**
     * The LinearSearchStopOrderResult model constructor.
     * @property {module:model/LinearSearchStopOrderResult}
     */
    LinearSearchStopOrderResult: LinearSearchStopOrderResult,
    /**
     * The LinearSearchStopOrderResultBase model constructor.
     * @property {module:model/LinearSearchStopOrderResultBase}
     */
    LinearSearchStopOrderResultBase: LinearSearchStopOrderResultBase,
    /**
     * The LinearSetLeverageResult model constructor.
     * @property {module:model/LinearSetLeverageResult}
     */
    LinearSetLeverageResult: LinearSetLeverageResult,
    /**
     * The LinearSetMarginResult model constructor.
     * @property {module:model/LinearSetMarginResult}
     */
    LinearSetMarginResult: LinearSetMarginResult,
    /**
     * The LinearSetMarginResultBase model constructor.
     * @property {module:model/LinearSetMarginResultBase}
     */
    LinearSetMarginResultBase: LinearSetMarginResultBase,
    /**
     * The LinearSetTradingStopResult model constructor.
     * @property {module:model/LinearSetTradingStopResult}
     */
    LinearSetTradingStopResult: LinearSetTradingStopResult,
    /**
     * The LinearStopOrderCancelAllBase model constructor.
     * @property {module:model/LinearStopOrderCancelAllBase}
     */
    LinearStopOrderCancelAllBase: LinearStopOrderCancelAllBase,
    /**
     * The LinearStopOrderRecordsResponse model constructor.
     * @property {module:model/LinearStopOrderRecordsResponse}
     */
    LinearStopOrderRecordsResponse: LinearStopOrderRecordsResponse,
    /**
     * The LinearStopOrderRecordsResponseBase model constructor.
     * @property {module:model/LinearStopOrderRecordsResponseBase}
     */
    LinearStopOrderRecordsResponseBase: LinearStopOrderRecordsResponseBase,
    /**
     * The LinearStopOrderReplace model constructor.
     * @property {module:model/LinearStopOrderReplace}
     */
    LinearStopOrderReplace: LinearStopOrderReplace,
    /**
     * The LinearSwitchIsolatedResult model constructor.
     * @property {module:model/LinearSwitchIsolatedResult}
     */
    LinearSwitchIsolatedResult: LinearSwitchIsolatedResult,
    /**
     * The LinearSwitchModeResult model constructor.
     * @property {module:model/LinearSwitchModeResult}
     */
    LinearSwitchModeResult: LinearSwitchModeResult,
    /**
     * The LinearTradeRecordItem model constructor.
     * @property {module:model/LinearTradeRecordItem}
     */
    LinearTradeRecordItem: LinearTradeRecordItem,
    /**
     * The LinearTradeRecordsResponse model constructor.
     * @property {module:model/LinearTradeRecordsResponse}
     */
    LinearTradeRecordsResponse: LinearTradeRecordsResponse,
    /**
     * The LiqRecords model constructor.
     * @property {module:model/LiqRecords}
     */
    LiqRecords: LiqRecords,
    /**
     * The LiqRecordsInfo model constructor.
     * @property {module:model/LiqRecordsInfo}
     */
    LiqRecordsInfo: LiqRecordsInfo,
    /**
     * The LotSizeFilter model constructor.
     * @property {module:model/LotSizeFilter}
     */
    LotSizeFilter: LotSizeFilter,
    /**
     * The MarkPriceKlineBase model constructor.
     * @property {module:model/MarkPriceKlineBase}
     */
    MarkPriceKlineBase: MarkPriceKlineBase,
    /**
     * The MarkPriceKlineInfo model constructor.
     * @property {module:model/MarkPriceKlineInfo}
     */
    MarkPriceKlineInfo: MarkPriceKlineInfo,
    /**
     * The OderBookRes model constructor.
     * @property {module:model/OderBookRes}
     */
    OderBookRes: OderBookRes,
    /**
     * The OpenInterest model constructor.
     * @property {module:model/OpenInterest}
     */
    OpenInterest: OpenInterest,
    /**
     * The OpenInterestInfo model constructor.
     * @property {module:model/OpenInterestInfo}
     */
    OpenInterestInfo: OpenInterestInfo,
    /**
     * The OrderBookBase model constructor.
     * @property {module:model/OrderBookBase}
     */
    OrderBookBase: OrderBookBase,
    /**
     * The OrderCancelAllBase model constructor.
     * @property {module:model/OrderCancelAllBase}
     */
    OrderCancelAllBase: OrderCancelAllBase,
    /**
     * The OrderCancelAllRes model constructor.
     * @property {module:model/OrderCancelAllRes}
     */
    OrderCancelAllRes: OrderCancelAllRes,
    /**
     * The OrderCancelBase model constructor.
     * @property {module:model/OrderCancelBase}
     */
    OrderCancelBase: OrderCancelBase,
    /**
     * The OrderIdRes model constructor.
     * @property {module:model/OrderIdRes}
     */
    OrderIdRes: OrderIdRes,
    /**
     * The OrderRes model constructor.
     * @property {module:model/OrderRes}
     */
    OrderRes: OrderRes,
    /**
     * The OrderResBase model constructor.
     * @property {module:model/OrderResBase}
     */
    OrderResBase: OrderResBase,
    /**
     * The Position model constructor.
     * @property {module:model/Position}
     */
    Position: Position,
    /**
     * The PositionInfo model constructor.
     * @property {module:model/PositionInfo}
     */
    PositionInfo: PositionInfo,
    /**
     * The PriceFilter model constructor.
     * @property {module:model/PriceFilter}
     */
    PriceFilter: PriceFilter,
    /**
     * The QueryOrderBase model constructor.
     * @property {module:model/QueryOrderBase}
     */
    QueryOrderBase: QueryOrderBase,
    /**
     * The QueryOrderRes model constructor.
     * @property {module:model/QueryOrderRes}
     */
    QueryOrderRes: QueryOrderRes,
    /**
     * The ReplaceConditionalBase model constructor.
     * @property {module:model/ReplaceConditionalBase}
     */
    ReplaceConditionalBase: ReplaceConditionalBase,
    /**
     * The ReplaceOrderBase model constructor.
     * @property {module:model/ReplaceOrderBase}
     */
    ReplaceOrderBase: ReplaceOrderBase,
    /**
     * The RiskIDRes model constructor.
     * @property {module:model/RiskIDRes}
     */
    RiskIDRes: RiskIDRes,
    /**
     * The RiskLimitBase model constructor.
     * @property {module:model/RiskLimitBase}
     */
    RiskLimitBase: RiskLimitBase,
    /**
     * The RiskLimitRes model constructor.
     * @property {module:model/RiskLimitRes}
     */
    RiskLimitRes: RiskLimitRes,
    /**
     * The ServerTime model constructor.
     * @property {module:model/ServerTime}
     */
    ServerTime: ServerTime,
    /**
     * The SetRiskLimitBase model constructor.
     * @property {module:model/SetRiskLimitBase}
     */
    SetRiskLimitBase: SetRiskLimitBase,
    /**
     * The StopOrderOrdersResBase model constructor.
     * @property {module:model/StopOrderOrdersResBase}
     */
    StopOrderOrdersResBase: StopOrderOrdersResBase,
    /**
     * The SymbolInfo model constructor.
     * @property {module:model/SymbolInfo}
     */
    SymbolInfo: SymbolInfo,
    /**
     * The SymbolInfoBase model constructor.
     * @property {module:model/SymbolInfoBase}
     */
    SymbolInfoBase: SymbolInfoBase,
    /**
     * The SymbolTickInfo model constructor.
     * @property {module:model/SymbolTickInfo}
     */
    SymbolTickInfo: SymbolTickInfo,
    /**
     * The Symbols model constructor.
     * @property {module:model/Symbols}
     */
    Symbols: Symbols,
    /**
     * The TradeRecords model constructor.
     * @property {module:model/TradeRecords}
     */
    TradeRecords: TradeRecords,
    /**
     * The TradeRecordsBase model constructor.
     * @property {module:model/TradeRecordsBase}
     */
    TradeRecordsBase: TradeRecordsBase,
    /**
     * The TradeRecordsInfo model constructor.
     * @property {module:model/TradeRecordsInfo}
     */
    TradeRecordsInfo: TradeRecordsInfo,
    /**
     * The TradingRecords model constructor.
     * @property {module:model/TradingRecords}
     */
    TradingRecords: TradingRecords,
    /**
     * The TradingRecordsInfo model constructor.
     * @property {module:model/TradingRecordsInfo}
     */
    TradingRecordsInfo: TradingRecordsInfo,
    /**
     * The TradingStopBase model constructor.
     * @property {module:model/TradingStopBase}
     */
    TradingStopBase: TradingStopBase,
    /**
     * The TradingStopRes model constructor.
     * @property {module:model/TradingStopRes}
     */
    TradingStopRes: TradingStopRes,
    /**
     * The V2CancelOrderBase model constructor.
     * @property {module:model/V2CancelOrderBase}
     */
    V2CancelOrderBase: V2CancelOrderBase,
    /**
     * The V2ConditionalBase model constructor.
     * @property {module:model/V2ConditionalBase}
     */
    V2ConditionalBase: V2ConditionalBase,
    /**
     * The V2ConditionalListRes model constructor.
     * @property {module:model/V2ConditionalListRes}
     */
    V2ConditionalListRes: V2ConditionalListRes,
    /**
     * The V2ConditionalRes model constructor.
     * @property {module:model/V2ConditionalRes}
     */
    V2ConditionalRes: V2ConditionalRes,
    /**
     * The V2OrderListBase model constructor.
     * @property {module:model/V2OrderListBase}
     */
    V2OrderListBase: V2OrderListBase,
    /**
     * The V2OrderListData model constructor.
     * @property {module:model/V2OrderListData}
     */
    V2OrderListData: V2OrderListData,
    /**
     * The V2OrderRes model constructor.
     * @property {module:model/V2OrderRes}
     */
    V2OrderRes: V2OrderRes,
    /**
     * The WalletBalance model constructor.
     * @property {module:model/WalletBalance}
     */
    WalletBalance: WalletBalance,
    /**
     * The WalletBalanceBase model constructor.
     * @property {module:model/WalletBalanceBase}
     */
    WalletBalanceBase: WalletBalanceBase,
    /**
     * The WithdrawRecords model constructor.
     * @property {module:model/WithdrawRecords}
     */
    WithdrawRecords: WithdrawRecords,
    /**
     * The WithdrawResBase model constructor.
     * @property {module:model/WithdrawResBase}
     */
    WithdrawResBase: WithdrawResBase,
    /**
     * The APIkeyApi service constructor.
     * @property {module:api/APIkeyApi}
     */
    APIkeyApi: APIkeyApi,
    /**
     * The CommonApi service constructor.
     * @property {module:api/CommonApi}
     */
    CommonApi: CommonApi,
    /**
     * The ConditionalApi service constructor.
     * @property {module:api/ConditionalApi}
     */
    ConditionalApi: ConditionalApi,
    /**
     * The ExecutionApi service constructor.
     * @property {module:api/ExecutionApi}
     */
    ExecutionApi: ExecutionApi,
    /**
     * The FundingApi service constructor.
     * @property {module:api/FundingApi}
     */
    FundingApi: FundingApi,
    /**
     * The KlineApi service constructor.
     * @property {module:api/KlineApi}
     */
    KlineApi: KlineApi,
    /**
     * The LinearConditionalApi service constructor.
     * @property {module:api/LinearConditionalApi}
     */
    LinearConditionalApi: LinearConditionalApi,
    /**
     * The LinearExecutionApi service constructor.
     * @property {module:api/LinearExecutionApi}
     */
    LinearExecutionApi: LinearExecutionApi,
    /**
     * The LinearFundingApi service constructor.
     * @property {module:api/LinearFundingApi}
     */
    LinearFundingApi: LinearFundingApi,
    /**
     * The LinearKlineApi service constructor.
     * @property {module:api/LinearKlineApi}
     */
    LinearKlineApi: LinearKlineApi,
    /**
     * The LinearMarketApi service constructor.
     * @property {module:api/LinearMarketApi}
     */
    LinearMarketApi: LinearMarketApi,
    /**
     * The LinearOrderApi service constructor.
     * @property {module:api/LinearOrderApi}
     */
    LinearOrderApi: LinearOrderApi,
    /**
     * The LinearPositionsApi service constructor.
     * @property {module:api/LinearPositionsApi}
     */
    LinearPositionsApi: LinearPositionsApi,
    /**
     * The LinearWalletApi service constructor.
     * @property {module:api/LinearWalletApi}
     */
    LinearWalletApi: LinearWalletApi,
    /**
     * The MarketApi service constructor.
     * @property {module:api/MarketApi}
     */
    MarketApi: MarketApi,
    /**
     * The OrderApi service constructor.
     * @property {module:api/OrderApi}
     */
    OrderApi: OrderApi,
    /**
     * The PositionsApi service constructor.
     * @property {module:api/PositionsApi}
     */
    PositionsApi: PositionsApi,
    /**
     * The SymbolApi service constructor.
     * @property {module:api/SymbolApi}
     */
    SymbolApi: SymbolApi,
    /**
     * The WalletApi service constructor.
     * @property {module:api/WalletApi}
     */
    WalletApi: WalletApi
  };

  return exports;
}));
