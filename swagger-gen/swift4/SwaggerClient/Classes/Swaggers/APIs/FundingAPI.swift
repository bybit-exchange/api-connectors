//
// FundingAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class FundingAPI {
    /**
     Funding settlement occurs every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. The current interval's fund fee settlement is based on the previous interval's fund rate. For example, at 16:00, the settlement is based on the fund rate generated at 8:00. The fund rate generated at 16:00 will be used at 0:00 on the next day.
     
     - parameter symbol: (query) Contract type. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fundingMyLastFee(symbol: String, completion: @escaping ((_ data: Any?,_ error: Error?) -> Void)) {
        fundingMyLastFeeWithRequestBuilder(symbol: symbol).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Funding settlement occurs every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. The current interval's fund fee settlement is based on the previous interval's fund rate. For example, at 16:00, the settlement is based on the fund rate generated at 8:00. The fund rate generated at 16:00 will be used at 0:00 on the next day.
     - GET /open-api/funding/prev-funding
     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apiKey
     - API Key:
       - type: apiKey sign (QUERY)
       - name: apiSignature
     - API Key:
       - type: apiKey timestamp (QUERY)
       - name: timestamp
     - examples: [{contentType=application/json, example=""}]
     
     - parameter symbol: (query) Contract type. 

     - returns: RequestBuilder<Any> 
     */
    open class func fundingMyLastFeeWithRequestBuilder(symbol: String) -> RequestBuilder<Any> {
        let path = "/open-api/funding/prev-funding"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "symbol": symbol
        ])

        let requestBuilder: RequestBuilder<Any>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get predicted funding rate and funding fee.
     
     - parameter symbol: (query) Contract type. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fundingPredicted(symbol: String, completion: @escaping ((_ data: Any?,_ error: Error?) -> Void)) {
        fundingPredictedWithRequestBuilder(symbol: symbol).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get predicted funding rate and funding fee.
     - GET /open-api/funding/predicted-funding
     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apiKey
     - API Key:
       - type: apiKey sign (QUERY)
       - name: apiSignature
     - API Key:
       - type: apiKey timestamp (QUERY)
       - name: timestamp
     - examples: [{contentType=application/json, example=""}]
     
     - parameter symbol: (query) Contract type. 

     - returns: RequestBuilder<Any> 
     */
    open class func fundingPredictedWithRequestBuilder(symbol: String) -> RequestBuilder<Any> {
        let path = "/open-api/funding/predicted-funding"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "symbol": symbol
        ])

        let requestBuilder: RequestBuilder<Any>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get predicted funding rate and funding fee.
     
     - parameter symbol: (query) Contract type. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fundingPrevRate(symbol: String, completion: @escaping ((_ data: Any?,_ error: Error?) -> Void)) {
        fundingPrevRateWithRequestBuilder(symbol: symbol).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get predicted funding rate and funding fee.
     - GET /open-api/funding/prev-funding-rate
     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apiKey
     - API Key:
       - type: apiKey sign (QUERY)
       - name: apiSignature
     - API Key:
       - type: apiKey timestamp (QUERY)
       - name: timestamp
     - examples: [{contentType=application/json, example=""}]
     
     - parameter symbol: (query) Contract type. 

     - returns: RequestBuilder<Any> 
     */
    open class func fundingPrevRateWithRequestBuilder(symbol: String) -> RequestBuilder<Any> {
        let path = "/open-api/funding/prev-funding-rate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "symbol": symbol
        ])

        let requestBuilder: RequestBuilder<Any>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
