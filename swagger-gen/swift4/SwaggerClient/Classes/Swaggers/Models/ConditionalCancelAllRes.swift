//
// ConditionalCancelAllRes.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Cancel all conditional order response */

public struct ConditionalCancelAllRes: Codable {

    public var clOrdID: String?
    public var userId: Double?
    public var symbol: String?
    public var side: String?
    public var orderType: String?
    public var price: String?
    public var qty: Double?
    public var timeInForce: String?
    public var createType: String?
    public var cancelType: String?
    public var orderStatus: String?
    public var leavesQty: Double?
    public var leavesValue: String?
    public var crossSeq: Double?
    public var stopOrderType: String?
    public var triggerBy: String?
    public var createdAt: String?
    public var updatedAt: String?

    public init(clOrdID: String?, userId: Double?, symbol: String?, side: String?, orderType: String?, price: String?, qty: Double?, timeInForce: String?, createType: String?, cancelType: String?, orderStatus: String?, leavesQty: Double?, leavesValue: String?, crossSeq: Double?, stopOrderType: String?, triggerBy: String?, createdAt: String?, updatedAt: String?) {
        self.clOrdID = clOrdID
        self.userId = userId
        self.symbol = symbol
        self.side = side
        self.orderType = orderType
        self.price = price
        self.qty = qty
        self.timeInForce = timeInForce
        self.createType = createType
        self.cancelType = cancelType
        self.orderStatus = orderStatus
        self.leavesQty = leavesQty
        self.leavesValue = leavesValue
        self.crossSeq = crossSeq
        self.stopOrderType = stopOrderType
        self.triggerBy = triggerBy
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey { 
        case clOrdID
        case userId = "user_id"
        case symbol
        case side
        case orderType = "order_type"
        case price
        case qty
        case timeInForce = "time_in_force"
        case createType = "create_type"
        case cancelType = "cancel_type"
        case orderStatus = "order_status"
        case leavesQty = "leaves_qty"
        case leavesValue = "leaves_value"
        case crossSeq = "cross_seq"
        case stopOrderType = "stop_order_type"
        case triggerBy = "trigger_by"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }


}

