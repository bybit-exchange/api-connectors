/**
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import io.swagger.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("APIKeyBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<APIKeyBase>>(){}.getType();
    }
    
    if ("APIKeyInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<APIKeyInfo>>(){}.getType();
    }
    
    if ("AccountRatio".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountRatio>>(){}.getType();
    }
    
    if ("AccountRatioInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountRatioInfo>>(){}.getType();
    }
    
    if ("Announcement".equalsIgnoreCase(className)) {
      return new TypeToken<List<Announcement>>(){}.getType();
    }
    
    if ("AnnouncementInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<AnnouncementInfo>>(){}.getType();
    }
    
    if ("BigDeal".equalsIgnoreCase(className)) {
      return new TypeToken<List<BigDeal>>(){}.getType();
    }
    
    if ("BigDealInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<BigDealInfo>>(){}.getType();
    }
    
    if ("ClosedPnlBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<ClosedPnlBase>>(){}.getType();
    }
    
    if ("ClosedPnlInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<ClosedPnlInfo>>(){}.getType();
    }
    
    if ("ConditionalCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConditionalCancelAllBase>>(){}.getType();
    }
    
    if ("ConditionalCancelAllRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConditionalCancelAllRes>>(){}.getType();
    }
    
    if ("ConditionalOrdersRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConditionalOrdersRes>>(){}.getType();
    }
    
    if ("ConditionalOrdersResBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConditionalOrdersResBase>>(){}.getType();
    }
    
    if ("ConditionalRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConditionalRes>>(){}.getType();
    }
    
    if ("ExchangeOrderList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExchangeOrderList>>(){}.getType();
    }
    
    if ("ExchangeOrderListBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExchangeOrderListBase>>(){}.getType();
    }
    
    if ("ExtFields".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExtFields>>(){}.getType();
    }
    
    if ("FundRecordBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundRecordBase>>(){}.getType();
    }
    
    if ("FundingFeeBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundingFeeBase>>(){}.getType();
    }
    
    if ("FundingFeeRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundingFeeRes>>(){}.getType();
    }
    
    if ("FundingPredicted".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundingPredicted>>(){}.getType();
    }
    
    if ("FundingPredictedBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundingPredictedBase>>(){}.getType();
    }
    
    if ("FundingRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundingRate>>(){}.getType();
    }
    
    if ("FundingRateBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundingRateBase>>(){}.getType();
    }
    
    if ("FundingRecords".equalsIgnoreCase(className)) {
      return new TypeToken<List<FundingRecords>>(){}.getType();
    }
    
    if ("GetRiskLimitRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetRiskLimitRes>>(){}.getType();
    }
    
    if ("KlineBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<KlineBase>>(){}.getType();
    }
    
    if ("KlineRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<KlineRes>>(){}.getType();
    }
    
    if ("LCPInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<LCPInfo>>(){}.getType();
    }
    
    if ("LCPInfoBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LCPInfoBase>>(){}.getType();
    }
    
    if ("Leverage".equalsIgnoreCase(className)) {
      return new TypeToken<List<Leverage>>(){}.getType();
    }
    
    if ("LeverageInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeverageInfo>>(){}.getType();
    }
    
    if ("LeverageResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LeverageResult>>(){}.getType();
    }
    
    if ("LinearCancelOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCancelOrderResult>>(){}.getType();
    }
    
    if ("LinearCancelOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCancelOrderResultBase>>(){}.getType();
    }
    
    if ("LinearCancelStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCancelStopOrderResult>>(){}.getType();
    }
    
    if ("LinearCancelStopOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCancelStopOrderResultBase>>(){}.getType();
    }
    
    if ("LinearClosePnlRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearClosePnlRecordsResponse>>(){}.getType();
    }
    
    if ("LinearClosedPnlRecordResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearClosedPnlRecordResult>>(){}.getType();
    }
    
    if ("LinearCreateOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCreateOrderResult>>(){}.getType();
    }
    
    if ("LinearCreateOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCreateOrderResultBase>>(){}.getType();
    }
    
    if ("LinearCreateStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCreateStopOrderResult>>(){}.getType();
    }
    
    if ("LinearCreateStopOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearCreateStopOrderResultBase>>(){}.getType();
    }
    
    if ("LinearFundingPredicted".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearFundingPredicted>>(){}.getType();
    }
    
    if ("LinearFundingPredictedBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearFundingPredictedBase>>(){}.getType();
    }
    
    if ("LinearKlineResp".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearKlineResp>>(){}.getType();
    }
    
    if ("LinearKlineRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearKlineRespBase>>(){}.getType();
    }
    
    if ("LinearListOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearListOrderResult>>(){}.getType();
    }
    
    if ("LinearListStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearListStopOrderResult>>(){}.getType();
    }
    
    if ("LinearOrderCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearOrderCancelAllBase>>(){}.getType();
    }
    
    if ("LinearOrderRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearOrderRecordsResponse>>(){}.getType();
    }
    
    if ("LinearOrderRecordsResponseBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearOrderRecordsResponseBase>>(){}.getType();
    }
    
    if ("LinearOrderReplace".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearOrderReplace>>(){}.getType();
    }
    
    if ("LinearPositionListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearPositionListResult>>(){}.getType();
    }
    
    if ("LinearPositionListResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearPositionListResultBase>>(){}.getType();
    }
    
    if ("LinearPrevFundingRateResp".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearPrevFundingRateResp>>(){}.getType();
    }
    
    if ("LinearPrevFundingRateRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearPrevFundingRateRespBase>>(){}.getType();
    }
    
    if ("LinearPrevFundingResp".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearPrevFundingResp>>(){}.getType();
    }
    
    if ("LinearPrevFundingRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearPrevFundingRespBase>>(){}.getType();
    }
    
    if ("LinearRecentTradingRecordResp".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearRecentTradingRecordResp>>(){}.getType();
    }
    
    if ("LinearRecentTradingRecordRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearRecentTradingRecordRespBase>>(){}.getType();
    }
    
    if ("LinearRiskLimitResp".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearRiskLimitResp>>(){}.getType();
    }
    
    if ("LinearRiskLimitRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearRiskLimitRespBase>>(){}.getType();
    }
    
    if ("LinearSearchOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSearchOrderResult>>(){}.getType();
    }
    
    if ("LinearSearchOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSearchOrderResultBase>>(){}.getType();
    }
    
    if ("LinearSearchStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSearchStopOrderResult>>(){}.getType();
    }
    
    if ("LinearSearchStopOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSearchStopOrderResultBase>>(){}.getType();
    }
    
    if ("LinearSetLeverageResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSetLeverageResult>>(){}.getType();
    }
    
    if ("LinearSetMarginResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSetMarginResult>>(){}.getType();
    }
    
    if ("LinearSetMarginResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSetMarginResultBase>>(){}.getType();
    }
    
    if ("LinearSetTradingStopResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSetTradingStopResult>>(){}.getType();
    }
    
    if ("LinearStopOrderCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearStopOrderCancelAllBase>>(){}.getType();
    }
    
    if ("LinearStopOrderRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearStopOrderRecordsResponse>>(){}.getType();
    }
    
    if ("LinearStopOrderRecordsResponseBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearStopOrderRecordsResponseBase>>(){}.getType();
    }
    
    if ("LinearStopOrderReplace".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearStopOrderReplace>>(){}.getType();
    }
    
    if ("LinearSwitchIsolatedResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSwitchIsolatedResult>>(){}.getType();
    }
    
    if ("LinearSwitchModeResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearSwitchModeResult>>(){}.getType();
    }
    
    if ("LinearTradeRecordItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearTradeRecordItem>>(){}.getType();
    }
    
    if ("LinearTradeRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinearTradeRecordsResponse>>(){}.getType();
    }
    
    if ("LiqRecords".equalsIgnoreCase(className)) {
      return new TypeToken<List<LiqRecords>>(){}.getType();
    }
    
    if ("LiqRecordsInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<LiqRecordsInfo>>(){}.getType();
    }
    
    if ("LotSizeFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<LotSizeFilter>>(){}.getType();
    }
    
    if ("MarkPriceKlineBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<MarkPriceKlineBase>>(){}.getType();
    }
    
    if ("MarkPriceKlineInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<MarkPriceKlineInfo>>(){}.getType();
    }
    
    if ("OderBookRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<OderBookRes>>(){}.getType();
    }
    
    if ("OpenInterest".equalsIgnoreCase(className)) {
      return new TypeToken<List<OpenInterest>>(){}.getType();
    }
    
    if ("OpenInterestInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<OpenInterestInfo>>(){}.getType();
    }
    
    if ("OrderBookBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBookBase>>(){}.getType();
    }
    
    if ("OrderCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderCancelAllBase>>(){}.getType();
    }
    
    if ("OrderCancelAllRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderCancelAllRes>>(){}.getType();
    }
    
    if ("OrderCancelBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderCancelBase>>(){}.getType();
    }
    
    if ("OrderIdRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderIdRes>>(){}.getType();
    }
    
    if ("OrderRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderRes>>(){}.getType();
    }
    
    if ("OrderResBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderResBase>>(){}.getType();
    }
    
    if ("Position".equalsIgnoreCase(className)) {
      return new TypeToken<List<Position>>(){}.getType();
    }
    
    if ("PositionInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<PositionInfo>>(){}.getType();
    }
    
    if ("PriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceFilter>>(){}.getType();
    }
    
    if ("QueryOrderBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<QueryOrderBase>>(){}.getType();
    }
    
    if ("QueryOrderRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<QueryOrderRes>>(){}.getType();
    }
    
    if ("ReplaceConditionalBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReplaceConditionalBase>>(){}.getType();
    }
    
    if ("ReplaceOrderBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReplaceOrderBase>>(){}.getType();
    }
    
    if ("RiskIDRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<RiskIDRes>>(){}.getType();
    }
    
    if ("RiskLimitBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<RiskLimitBase>>(){}.getType();
    }
    
    if ("RiskLimitRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<RiskLimitRes>>(){}.getType();
    }
    
    if ("ServerTime".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServerTime>>(){}.getType();
    }
    
    if ("SetRiskLimitBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetRiskLimitBase>>(){}.getType();
    }
    
    if ("StopOrderOrdersResBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<StopOrderOrdersResBase>>(){}.getType();
    }
    
    if ("SymbolInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<SymbolInfo>>(){}.getType();
    }
    
    if ("SymbolInfoBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<SymbolInfoBase>>(){}.getType();
    }
    
    if ("SymbolTickInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<SymbolTickInfo>>(){}.getType();
    }
    
    if ("Symbols".equalsIgnoreCase(className)) {
      return new TypeToken<List<Symbols>>(){}.getType();
    }
    
    if ("TradeRecords".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradeRecords>>(){}.getType();
    }
    
    if ("TradeRecordsBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradeRecordsBase>>(){}.getType();
    }
    
    if ("TradeRecordsInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradeRecordsInfo>>(){}.getType();
    }
    
    if ("TradingRecords".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradingRecords>>(){}.getType();
    }
    
    if ("TradingRecordsInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradingRecordsInfo>>(){}.getType();
    }
    
    if ("TradingStopBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradingStopBase>>(){}.getType();
    }
    
    if ("TradingStopRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<TradingStopRes>>(){}.getType();
    }
    
    if ("V2CancelOrderBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<V2CancelOrderBase>>(){}.getType();
    }
    
    if ("V2ConditionalBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<V2ConditionalBase>>(){}.getType();
    }
    
    if ("V2ConditionalListRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<V2ConditionalListRes>>(){}.getType();
    }
    
    if ("V2ConditionalRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<V2ConditionalRes>>(){}.getType();
    }
    
    if ("V2OrderListBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<V2OrderListBase>>(){}.getType();
    }
    
    if ("V2OrderListData".equalsIgnoreCase(className)) {
      return new TypeToken<List<V2OrderListData>>(){}.getType();
    }
    
    if ("V2OrderRes".equalsIgnoreCase(className)) {
      return new TypeToken<List<V2OrderRes>>(){}.getType();
    }
    
    if ("WalletBalance".equalsIgnoreCase(className)) {
      return new TypeToken<List<WalletBalance>>(){}.getType();
    }
    
    if ("WalletBalanceBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<WalletBalanceBase>>(){}.getType();
    }
    
    if ("WithdrawRecords".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawRecords>>(){}.getType();
    }
    
    if ("WithdrawResBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawResBase>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("APIKeyBase".equalsIgnoreCase(className)) {
      return new TypeToken<APIKeyBase>(){}.getType();
    }
    
    if ("APIKeyInfo".equalsIgnoreCase(className)) {
      return new TypeToken<APIKeyInfo>(){}.getType();
    }
    
    if ("AccountRatio".equalsIgnoreCase(className)) {
      return new TypeToken<AccountRatio>(){}.getType();
    }
    
    if ("AccountRatioInfo".equalsIgnoreCase(className)) {
      return new TypeToken<AccountRatioInfo>(){}.getType();
    }
    
    if ("Announcement".equalsIgnoreCase(className)) {
      return new TypeToken<Announcement>(){}.getType();
    }
    
    if ("AnnouncementInfo".equalsIgnoreCase(className)) {
      return new TypeToken<AnnouncementInfo>(){}.getType();
    }
    
    if ("BigDeal".equalsIgnoreCase(className)) {
      return new TypeToken<BigDeal>(){}.getType();
    }
    
    if ("BigDealInfo".equalsIgnoreCase(className)) {
      return new TypeToken<BigDealInfo>(){}.getType();
    }
    
    if ("ClosedPnlBase".equalsIgnoreCase(className)) {
      return new TypeToken<ClosedPnlBase>(){}.getType();
    }
    
    if ("ClosedPnlInfo".equalsIgnoreCase(className)) {
      return new TypeToken<ClosedPnlInfo>(){}.getType();
    }
    
    if ("ConditionalCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<ConditionalCancelAllBase>(){}.getType();
    }
    
    if ("ConditionalCancelAllRes".equalsIgnoreCase(className)) {
      return new TypeToken<ConditionalCancelAllRes>(){}.getType();
    }
    
    if ("ConditionalOrdersRes".equalsIgnoreCase(className)) {
      return new TypeToken<ConditionalOrdersRes>(){}.getType();
    }
    
    if ("ConditionalOrdersResBase".equalsIgnoreCase(className)) {
      return new TypeToken<ConditionalOrdersResBase>(){}.getType();
    }
    
    if ("ConditionalRes".equalsIgnoreCase(className)) {
      return new TypeToken<ConditionalRes>(){}.getType();
    }
    
    if ("ExchangeOrderList".equalsIgnoreCase(className)) {
      return new TypeToken<ExchangeOrderList>(){}.getType();
    }
    
    if ("ExchangeOrderListBase".equalsIgnoreCase(className)) {
      return new TypeToken<ExchangeOrderListBase>(){}.getType();
    }
    
    if ("ExtFields".equalsIgnoreCase(className)) {
      return new TypeToken<ExtFields>(){}.getType();
    }
    
    if ("FundRecordBase".equalsIgnoreCase(className)) {
      return new TypeToken<FundRecordBase>(){}.getType();
    }
    
    if ("FundingFeeBase".equalsIgnoreCase(className)) {
      return new TypeToken<FundingFeeBase>(){}.getType();
    }
    
    if ("FundingFeeRes".equalsIgnoreCase(className)) {
      return new TypeToken<FundingFeeRes>(){}.getType();
    }
    
    if ("FundingPredicted".equalsIgnoreCase(className)) {
      return new TypeToken<FundingPredicted>(){}.getType();
    }
    
    if ("FundingPredictedBase".equalsIgnoreCase(className)) {
      return new TypeToken<FundingPredictedBase>(){}.getType();
    }
    
    if ("FundingRate".equalsIgnoreCase(className)) {
      return new TypeToken<FundingRate>(){}.getType();
    }
    
    if ("FundingRateBase".equalsIgnoreCase(className)) {
      return new TypeToken<FundingRateBase>(){}.getType();
    }
    
    if ("FundingRecords".equalsIgnoreCase(className)) {
      return new TypeToken<FundingRecords>(){}.getType();
    }
    
    if ("GetRiskLimitRes".equalsIgnoreCase(className)) {
      return new TypeToken<GetRiskLimitRes>(){}.getType();
    }
    
    if ("KlineBase".equalsIgnoreCase(className)) {
      return new TypeToken<KlineBase>(){}.getType();
    }
    
    if ("KlineRes".equalsIgnoreCase(className)) {
      return new TypeToken<KlineRes>(){}.getType();
    }
    
    if ("LCPInfo".equalsIgnoreCase(className)) {
      return new TypeToken<LCPInfo>(){}.getType();
    }
    
    if ("LCPInfoBase".equalsIgnoreCase(className)) {
      return new TypeToken<LCPInfoBase>(){}.getType();
    }
    
    if ("Leverage".equalsIgnoreCase(className)) {
      return new TypeToken<Leverage>(){}.getType();
    }
    
    if ("LeverageInfo".equalsIgnoreCase(className)) {
      return new TypeToken<LeverageInfo>(){}.getType();
    }
    
    if ("LeverageResult".equalsIgnoreCase(className)) {
      return new TypeToken<LeverageResult>(){}.getType();
    }
    
    if ("LinearCancelOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCancelOrderResult>(){}.getType();
    }
    
    if ("LinearCancelOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCancelOrderResultBase>(){}.getType();
    }
    
    if ("LinearCancelStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCancelStopOrderResult>(){}.getType();
    }
    
    if ("LinearCancelStopOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCancelStopOrderResultBase>(){}.getType();
    }
    
    if ("LinearClosePnlRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<LinearClosePnlRecordsResponse>(){}.getType();
    }
    
    if ("LinearClosedPnlRecordResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearClosedPnlRecordResult>(){}.getType();
    }
    
    if ("LinearCreateOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCreateOrderResult>(){}.getType();
    }
    
    if ("LinearCreateOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCreateOrderResultBase>(){}.getType();
    }
    
    if ("LinearCreateStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCreateStopOrderResult>(){}.getType();
    }
    
    if ("LinearCreateStopOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearCreateStopOrderResultBase>(){}.getType();
    }
    
    if ("LinearFundingPredicted".equalsIgnoreCase(className)) {
      return new TypeToken<LinearFundingPredicted>(){}.getType();
    }
    
    if ("LinearFundingPredictedBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearFundingPredictedBase>(){}.getType();
    }
    
    if ("LinearKlineResp".equalsIgnoreCase(className)) {
      return new TypeToken<LinearKlineResp>(){}.getType();
    }
    
    if ("LinearKlineRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearKlineRespBase>(){}.getType();
    }
    
    if ("LinearListOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearListOrderResult>(){}.getType();
    }
    
    if ("LinearListStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearListStopOrderResult>(){}.getType();
    }
    
    if ("LinearOrderCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearOrderCancelAllBase>(){}.getType();
    }
    
    if ("LinearOrderRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<LinearOrderRecordsResponse>(){}.getType();
    }
    
    if ("LinearOrderRecordsResponseBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearOrderRecordsResponseBase>(){}.getType();
    }
    
    if ("LinearOrderReplace".equalsIgnoreCase(className)) {
      return new TypeToken<LinearOrderReplace>(){}.getType();
    }
    
    if ("LinearPositionListResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearPositionListResult>(){}.getType();
    }
    
    if ("LinearPositionListResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearPositionListResultBase>(){}.getType();
    }
    
    if ("LinearPrevFundingRateResp".equalsIgnoreCase(className)) {
      return new TypeToken<LinearPrevFundingRateResp>(){}.getType();
    }
    
    if ("LinearPrevFundingRateRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearPrevFundingRateRespBase>(){}.getType();
    }
    
    if ("LinearPrevFundingResp".equalsIgnoreCase(className)) {
      return new TypeToken<LinearPrevFundingResp>(){}.getType();
    }
    
    if ("LinearPrevFundingRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearPrevFundingRespBase>(){}.getType();
    }
    
    if ("LinearRecentTradingRecordResp".equalsIgnoreCase(className)) {
      return new TypeToken<LinearRecentTradingRecordResp>(){}.getType();
    }
    
    if ("LinearRecentTradingRecordRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearRecentTradingRecordRespBase>(){}.getType();
    }
    
    if ("LinearRiskLimitResp".equalsIgnoreCase(className)) {
      return new TypeToken<LinearRiskLimitResp>(){}.getType();
    }
    
    if ("LinearRiskLimitRespBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearRiskLimitRespBase>(){}.getType();
    }
    
    if ("LinearSearchOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSearchOrderResult>(){}.getType();
    }
    
    if ("LinearSearchOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSearchOrderResultBase>(){}.getType();
    }
    
    if ("LinearSearchStopOrderResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSearchStopOrderResult>(){}.getType();
    }
    
    if ("LinearSearchStopOrderResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSearchStopOrderResultBase>(){}.getType();
    }
    
    if ("LinearSetLeverageResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSetLeverageResult>(){}.getType();
    }
    
    if ("LinearSetMarginResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSetMarginResult>(){}.getType();
    }
    
    if ("LinearSetMarginResultBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSetMarginResultBase>(){}.getType();
    }
    
    if ("LinearSetTradingStopResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSetTradingStopResult>(){}.getType();
    }
    
    if ("LinearStopOrderCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearStopOrderCancelAllBase>(){}.getType();
    }
    
    if ("LinearStopOrderRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<LinearStopOrderRecordsResponse>(){}.getType();
    }
    
    if ("LinearStopOrderRecordsResponseBase".equalsIgnoreCase(className)) {
      return new TypeToken<LinearStopOrderRecordsResponseBase>(){}.getType();
    }
    
    if ("LinearStopOrderReplace".equalsIgnoreCase(className)) {
      return new TypeToken<LinearStopOrderReplace>(){}.getType();
    }
    
    if ("LinearSwitchIsolatedResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSwitchIsolatedResult>(){}.getType();
    }
    
    if ("LinearSwitchModeResult".equalsIgnoreCase(className)) {
      return new TypeToken<LinearSwitchModeResult>(){}.getType();
    }
    
    if ("LinearTradeRecordItem".equalsIgnoreCase(className)) {
      return new TypeToken<LinearTradeRecordItem>(){}.getType();
    }
    
    if ("LinearTradeRecordsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<LinearTradeRecordsResponse>(){}.getType();
    }
    
    if ("LiqRecords".equalsIgnoreCase(className)) {
      return new TypeToken<LiqRecords>(){}.getType();
    }
    
    if ("LiqRecordsInfo".equalsIgnoreCase(className)) {
      return new TypeToken<LiqRecordsInfo>(){}.getType();
    }
    
    if ("LotSizeFilter".equalsIgnoreCase(className)) {
      return new TypeToken<LotSizeFilter>(){}.getType();
    }
    
    if ("MarkPriceKlineBase".equalsIgnoreCase(className)) {
      return new TypeToken<MarkPriceKlineBase>(){}.getType();
    }
    
    if ("MarkPriceKlineInfo".equalsIgnoreCase(className)) {
      return new TypeToken<MarkPriceKlineInfo>(){}.getType();
    }
    
    if ("OderBookRes".equalsIgnoreCase(className)) {
      return new TypeToken<OderBookRes>(){}.getType();
    }
    
    if ("OpenInterest".equalsIgnoreCase(className)) {
      return new TypeToken<OpenInterest>(){}.getType();
    }
    
    if ("OpenInterestInfo".equalsIgnoreCase(className)) {
      return new TypeToken<OpenInterestInfo>(){}.getType();
    }
    
    if ("OrderBookBase".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBookBase>(){}.getType();
    }
    
    if ("OrderCancelAllBase".equalsIgnoreCase(className)) {
      return new TypeToken<OrderCancelAllBase>(){}.getType();
    }
    
    if ("OrderCancelAllRes".equalsIgnoreCase(className)) {
      return new TypeToken<OrderCancelAllRes>(){}.getType();
    }
    
    if ("OrderCancelBase".equalsIgnoreCase(className)) {
      return new TypeToken<OrderCancelBase>(){}.getType();
    }
    
    if ("OrderIdRes".equalsIgnoreCase(className)) {
      return new TypeToken<OrderIdRes>(){}.getType();
    }
    
    if ("OrderRes".equalsIgnoreCase(className)) {
      return new TypeToken<OrderRes>(){}.getType();
    }
    
    if ("OrderResBase".equalsIgnoreCase(className)) {
      return new TypeToken<OrderResBase>(){}.getType();
    }
    
    if ("Position".equalsIgnoreCase(className)) {
      return new TypeToken<Position>(){}.getType();
    }
    
    if ("PositionInfo".equalsIgnoreCase(className)) {
      return new TypeToken<PositionInfo>(){}.getType();
    }
    
    if ("PriceFilter".equalsIgnoreCase(className)) {
      return new TypeToken<PriceFilter>(){}.getType();
    }
    
    if ("QueryOrderBase".equalsIgnoreCase(className)) {
      return new TypeToken<QueryOrderBase>(){}.getType();
    }
    
    if ("QueryOrderRes".equalsIgnoreCase(className)) {
      return new TypeToken<QueryOrderRes>(){}.getType();
    }
    
    if ("ReplaceConditionalBase".equalsIgnoreCase(className)) {
      return new TypeToken<ReplaceConditionalBase>(){}.getType();
    }
    
    if ("ReplaceOrderBase".equalsIgnoreCase(className)) {
      return new TypeToken<ReplaceOrderBase>(){}.getType();
    }
    
    if ("RiskIDRes".equalsIgnoreCase(className)) {
      return new TypeToken<RiskIDRes>(){}.getType();
    }
    
    if ("RiskLimitBase".equalsIgnoreCase(className)) {
      return new TypeToken<RiskLimitBase>(){}.getType();
    }
    
    if ("RiskLimitRes".equalsIgnoreCase(className)) {
      return new TypeToken<RiskLimitRes>(){}.getType();
    }
    
    if ("ServerTime".equalsIgnoreCase(className)) {
      return new TypeToken<ServerTime>(){}.getType();
    }
    
    if ("SetRiskLimitBase".equalsIgnoreCase(className)) {
      return new TypeToken<SetRiskLimitBase>(){}.getType();
    }
    
    if ("StopOrderOrdersResBase".equalsIgnoreCase(className)) {
      return new TypeToken<StopOrderOrdersResBase>(){}.getType();
    }
    
    if ("SymbolInfo".equalsIgnoreCase(className)) {
      return new TypeToken<SymbolInfo>(){}.getType();
    }
    
    if ("SymbolInfoBase".equalsIgnoreCase(className)) {
      return new TypeToken<SymbolInfoBase>(){}.getType();
    }
    
    if ("SymbolTickInfo".equalsIgnoreCase(className)) {
      return new TypeToken<SymbolTickInfo>(){}.getType();
    }
    
    if ("Symbols".equalsIgnoreCase(className)) {
      return new TypeToken<Symbols>(){}.getType();
    }
    
    if ("TradeRecords".equalsIgnoreCase(className)) {
      return new TypeToken<TradeRecords>(){}.getType();
    }
    
    if ("TradeRecordsBase".equalsIgnoreCase(className)) {
      return new TypeToken<TradeRecordsBase>(){}.getType();
    }
    
    if ("TradeRecordsInfo".equalsIgnoreCase(className)) {
      return new TypeToken<TradeRecordsInfo>(){}.getType();
    }
    
    if ("TradingRecords".equalsIgnoreCase(className)) {
      return new TypeToken<TradingRecords>(){}.getType();
    }
    
    if ("TradingRecordsInfo".equalsIgnoreCase(className)) {
      return new TypeToken<TradingRecordsInfo>(){}.getType();
    }
    
    if ("TradingStopBase".equalsIgnoreCase(className)) {
      return new TypeToken<TradingStopBase>(){}.getType();
    }
    
    if ("TradingStopRes".equalsIgnoreCase(className)) {
      return new TypeToken<TradingStopRes>(){}.getType();
    }
    
    if ("V2CancelOrderBase".equalsIgnoreCase(className)) {
      return new TypeToken<V2CancelOrderBase>(){}.getType();
    }
    
    if ("V2ConditionalBase".equalsIgnoreCase(className)) {
      return new TypeToken<V2ConditionalBase>(){}.getType();
    }
    
    if ("V2ConditionalListRes".equalsIgnoreCase(className)) {
      return new TypeToken<V2ConditionalListRes>(){}.getType();
    }
    
    if ("V2ConditionalRes".equalsIgnoreCase(className)) {
      return new TypeToken<V2ConditionalRes>(){}.getType();
    }
    
    if ("V2OrderListBase".equalsIgnoreCase(className)) {
      return new TypeToken<V2OrderListBase>(){}.getType();
    }
    
    if ("V2OrderListData".equalsIgnoreCase(className)) {
      return new TypeToken<V2OrderListData>(){}.getType();
    }
    
    if ("V2OrderRes".equalsIgnoreCase(className)) {
      return new TypeToken<V2OrderRes>(){}.getType();
    }
    
    if ("WalletBalance".equalsIgnoreCase(className)) {
      return new TypeToken<WalletBalance>(){}.getType();
    }
    
    if ("WalletBalanceBase".equalsIgnoreCase(className)) {
      return new TypeToken<WalletBalanceBase>(){}.getType();
    }
    
    if ("WithdrawRecords".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawRecords>(){}.getType();
    }
    
    if ("WithdrawResBase".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawResBase>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
