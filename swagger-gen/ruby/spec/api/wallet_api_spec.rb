=begin
#Bybit API

### REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  

OpenAPI spec version: 0.2.10
Contact: support@bybit.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::WalletApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'WalletApi' do
  before do
    # run before each test
    @instance = SwaggerClient::WalletApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WalletApi' do
    it 'should create an instance of WalletApi' do
      expect(@instance).to be_instance_of(SwaggerClient::WalletApi)
    end
  end

  # unit tests for wallet_exchange_order
  # Asset Exchange Records
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page
  # @option opts [Float] :from Start ID. By default, returns the latest IDs
  # @option opts [String] :direction Search direction. Prev: searches in ascending order from start ID, Next: searches in descending order from start ID. Defaults to Next
  # @return [Object]
  describe 'wallet_exchange_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_get_balance
  # get wallet balance info
  # @param [Hash] opts the optional parameters
  # @option opts [String] :coin Coin.enum {BTC,EOS,XRP,ETH,USDT}
  # @return [Object]
  describe 'wallet_get_balance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_get_records
  # Get wallet fund records
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Start point for result
  # @option opts [String] :end_date End point for result
  # @option opts [String] :currency Currency type
  # @option opts [String] :wallet_fund_type wallet fund type
  # @option opts [String] :page Page. Default getting first page data
  # @option opts [String] :limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page
  # @return [Object]
  describe 'wallet_get_records test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_get_risk_limit
  # Get risk limit.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'wallet_get_risk_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_set_risk_limit
  # Set risk limit
  # @param symbol Contract type.
  # @param risk_id Risk ID. Can be found with the Get risk limit list endpoint.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'wallet_set_risk_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_withdraw
  # Get wallet fund records
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Start point for result
  # @option opts [String] :end_date End point for result
  # @option opts [String] :coin Currency
  # @option opts [String] :status Withdraw status
  # @option opts [String] :page Page. Default getting first page data
  # @option opts [String] :limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page
  # @return [Object]
  describe 'wallet_withdraw test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
