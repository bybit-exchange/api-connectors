=begin
#Bybit API

### REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  

OpenAPI spec version: 0.2.10
Contact: support@bybit.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ConditionalApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ConditionalApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ConditionalApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConditionalApi' do
    it 'should create an instance of ConditionalApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ConditionalApi)
    end
  end

  # unit tests for conditional_cancel
  # Cancel conditional order.
  # @param symbol Contract type.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :stop_order_id Order ID of conditional order.
  # @option opts [String] :order_link_id Agency customized order ID.
  # @return [Object]
  describe 'conditional_cancel test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conditional_cancel_all
  # Cancel conditional order.
  # @param symbol Contract type.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'conditional_cancel_all test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conditional_get_orders
  # Get my conditional order list.
  # @param symbol Contract type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :stop_order_status Stop order status.
  # @option opts [Float] :limit Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page.
  # @option opts [String] :direction Search direction. prev: prev page, next: next page. Defaults to next
  # @option opts [String] :cursor Page turning markï¼ŒUse return cursor,Sign use origin data, in request please urlencode
  # @return [Object]
  describe 'conditional_get_orders test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conditional_new
  # Place a new conditional order.
  # @param side Side.
  # @param symbol Contract type.
  # @param order_type Conditional order type.
  # @param qty Order quantity.
  # @param base_price Send current market price. It will be used to compare with the value of &#39;stop_px&#39;, to decide whether your conditional order will be triggered by crossing trigger price from upper side or lower side. Mainly used to identify the expected direction of the current conditional order..
  # @param stop_px Trigger price.
  # @param time_in_force Time in force.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :price Execution price for conditional order
  # @option opts [String] :trigger_by Trigger price type. Default LastPrice.
  # @option opts [BOOLEAN] :close_on_trigger close on trigger.
  # @option opts [String] :order_link_id Customized order ID, maximum length at 36 characters, and order ID under the same agency has to be unique..
  # @return [Object]
  describe 'conditional_new test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conditional_query
  # Query real-time stop order information.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :stop_order_id Order ID of conditional order.
  # @option opts [String] :order_link_id Agency customized order ID.
  # @option opts [String] :symbol Contract type.
  # @return [Object]
  describe 'conditional_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conditional_replace
  # Replace conditional order. Only incomplete orders can be modified. 
  # @param symbol Contract type.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :stop_order_id Stop order ID.
  # @option opts [String] :order_link_id Order Link ID.
  # @option opts [String] :p_r_qty Order quantity.
  # @option opts [String] :p_r_price Order price.
  # @option opts [String] :p_r_trigger_price Trigger price.
  # @return [Object]
  describe 'conditional_replace test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
