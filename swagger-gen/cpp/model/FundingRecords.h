/**
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * FundingRecords.h
 *
 * Get funding record response
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_FundingRecords_H_
#define IO_SWAGGER_CLIENT_MODEL_FundingRecords_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Get funding record response
/// </summary>
class  FundingRecords
    : public ModelBase
{
public:
    FundingRecords();
    virtual ~FundingRecords();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FundingRecords members

    /// <summary>
    /// 
    /// </summary>
    double getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(double value);
    /// <summary>
    /// 
    /// </summary>
    double getUserId() const;
    bool userIdIsSet() const;
    void unsetUser_id();
    void setUserId(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCoin() const;
    bool coinIsSet() const;
    void unsetCoin();
    void setCoin(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getWalletId() const;
    bool walletIdIsSet() const;
    void unsetWallet_id();
    void setWalletId(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();
    void setType(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();
    void setAmount(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTxId() const;
    bool txIdIsSet() const;
    void unsetTx_id();
    void setTxId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAddress() const;
    bool addressIsSet() const;
    void unsetAddress();
    void setAddress(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWalletBalance() const;
    bool walletBalanceIsSet() const;
    void unsetWallet_balance();
    void setWalletBalance(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getExecTime() const;
    bool execTimeIsSet() const;
    void unsetExec_time();
    void setExecTime(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getCrossSeq() const;
    bool crossSeqIsSet() const;
    void unsetCross_seq();
    void setCrossSeq(double value);

protected:
    double m_Id;
    bool m_IdIsSet;
    double m_User_id;
    bool m_User_idIsSet;
    utility::string_t m_Coin;
    bool m_CoinIsSet;
    double m_Wallet_id;
    bool m_Wallet_idIsSet;
    utility::string_t m_Type;
    bool m_TypeIsSet;
    utility::string_t m_Amount;
    bool m_AmountIsSet;
    utility::string_t m_Tx_id;
    bool m_Tx_idIsSet;
    utility::string_t m_Address;
    bool m_AddressIsSet;
    utility::string_t m_Wallet_balance;
    bool m_Wallet_balanceIsSet;
    utility::string_t m_Exec_time;
    bool m_Exec_timeIsSet;
    double m_Cross_seq;
    bool m_Cross_seqIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_FundingRecords_H_ */
