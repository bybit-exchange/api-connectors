/**
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * APIKeyInfo.h
 *
 * Get bybit server time.
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_APIKeyInfo_H_
#define IO_SWAGGER_CLIENT_MODEL_APIKeyInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Get bybit server time.
/// </summary>
class  APIKeyInfo
    : public ModelBase
{
public:
    APIKeyInfo();
    virtual ~APIKeyInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// APIKeyInfo members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getApiKey() const;
    bool apiKeyIsSet() const;
    void unsetApi_key();
    void setApiKey(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getUserId() const;
    bool userIdIsSet() const;
    void unsetUser_id();
    void setUserId(double value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getIps();
    bool ipsIsSet() const;
    void unsetIps();
    void setIps(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNote() const;
    bool noteIsSet() const;
    void unsetNote();
    void setNote(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getPermissions();
    bool permissionsIsSet() const;
    void unsetPermissions();
    void setPermissions(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();
    void setCreatedAt(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    bool isReadOnly() const;
    bool readOnlyIsSet() const;
    void unsetRead_only();
    void setReadOnly(bool value);

protected:
    utility::string_t m_Api_key;
    bool m_Api_keyIsSet;
    double m_User_id;
    bool m_User_idIsSet;
    std::vector<utility::string_t> m_Ips;
    bool m_IpsIsSet;
    utility::string_t m_Note;
    bool m_NoteIsSet;
    std::vector<utility::string_t> m_Permissions;
    bool m_PermissionsIsSet;
    utility::string_t m_Created_at;
    bool m_Created_atIsSet;
    bool m_Read_only;
    bool m_Read_onlyIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_APIKeyInfo_H_ */
